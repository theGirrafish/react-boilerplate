{
  // https://eslint.org/docs/user-guide/configuring#specifying-parser-options
  "parser": "babel-eslint",

  // "parser": "esprima",
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },

  // https://eslint.org/docs/user-guide/configuring#specifying-environments
  "env": {
    "browser": false,                       // browser global variables
    "node": false,                          // Node.js global variables and Node.js scoping
    "commonjs": false,                      // CommonJS global variables and CommonJS scoping (use this for browser-only code that uses Browserify/WebPack)
    "shared-node-browser": false,           // Globals common to both Node and Browser
    "es6": true,                            // enable all ECMAScript 6 features except for modules (this automatically sets the ecmaVersion parser option to 6)
    "jquery": false,                        // jQuery globals
  },

  // https://eslint.org/docs/user-guide/configuring#configuring-plugins
  "plugins": [
    "react"
  ],

  // https://eslint.org/docs/user-guide/configuring#configuring-rules
  // https://eslint.org/docs/rules/
  "rules": {

    ////////// Possible Errors //////////

    "no-console": 1,                            // disallow the use of console
    "no-constant-condition": 1,                 // disallow constant expressions in conditions
    "no-debugger": 1,                           // disallow the use of debugger
    "no-dupe-args": 1,                          // disallow duplicate arguments in function definitions
    "no-dupe-keys": 1,                          // disallow duplicate keys in object literals
    "no-duplicate-case": 1,                     // disallow duplicate case labels
    "no-empty": 1,                              // disallow empty block statements
    "no-extra-boolean-cast": 1,                 // disallow unnecessary boolean casts
    "no-extra-parens": [1,                      // disallow unnecessary parentheses
      "all", {
        "returnAssign": false,
        "nestedBinaryExpressions": false,
        "ignoreJSX": "all",
      }
    ],
    "no-func-assign": 1,                        // disallow reassigning function declarations
    "no-inner-declarations": 1,                 // disallow variable or function declarations in nested blocks
    "no-irregular-whitespace": 1,               // disallow irregular whitespace outside of strings and comments
    "no-obj-calls": 1,                          // disallow calling global object properties as functions
    "no-sparse-arrays": 1,                      // disallow sparse arrays
    "no-template-curly-in-string": 1,           // disallow template literal placeholder syntax in regular strings
    "no-unreachable": 1,                        // disallow unreachable code after return, throw, continue, and break statements
    "no-unsafe-negation": 1,                    // disallow negating the left operand of relational operators
    "use-isnan": 1,                             // require calls to isNaN() when checking for NaN
    "valid-jsdoc": 0,                           // enforce valid JSDoc comments
    "valid-typeof": 1,                          // enforce comparing typeof expressions against valid strings

    ////////// Best Practices //////////

    "array-callback-return": 1,                 // enforce return statements in callbacks of array methods
    "curly": 0,                                 // enforce consistent brace style for all control statements
    "dot-notation": 1,                          // enforce dot notation whenever possible
    "eqeqeq": 1,                                // require the use of === and !==
    "no-empty-pattern": 1,                      // disallow empty destructuring patterns
    "no-fallthrough": 1,                        // disallow fallthrough of case statements
    "no-floating-decimal": 1,                   // disallow leading or trailing decimal points in numeric literals
    "no-lone-blocks": 1,                        // disallow unnecessary nested blocks
    "no-multi-spaces": [1, {                    // disallow multiple spaces
      "ignoreEOLComments": true
    }],
    "no-multi-str": 1,                          // disallow multiline strings
    "no-octal": 1,                              // disallow octal literals
    "no-redeclare": 1,                          // disallow variable redeclaration
    "no-self-assign": 1,                        // disallow assignments where both sides are exactly the same
    "no-self-compare": 1,                       // disallow comparisons where both sides are exactly the same
    "no-useless-concat": 1,                     // disallow unnecessary concatenation of literals or template literals
    "no-useless-escape": 1,                     // disallow unnecessary escape characters
    "no-useless-return": 0,                     // disallow redundant return statements

    ////////// Variables //////////

    "no-shadow": 1,                             // disallow variable declarations from shadowing variables declared in the outer scope
    "no-undef-init": 1,                         // disallow initializing variables to undefined
    "no-unused-vars": 1,                        // disallow unused variables

    ////////// Node.js and CommonJS //////////

    "global-require": 1,                        // require require() calls to be placed at top-level module scope

    ////////// Stylistic Issues //////////

    "array-bracket-newline": [1,                // enforce linebreaks after opening and before closing array brackets
      "consistent"
    ],
    "array-bracket-spacing": 1,                 // enforce consistent spacing inside array brackets
    "brace-style": [1,                          // enforce consistent brace style for blocks
      "1tbs", {"allowSingleLine": true}
    ],
    "camelcase": 1,                             // enforce camelcase naming convention
    "capitalized-comments": 1,                  // enforce or disallow capitalization of the first letter of a comment
    "comma-dangle": 1,                          // require or disallow trailing commas
    "comma-spacing": 1,                         // enforce consistent spacing before and after commas
    "comma-style": 1,                           // enforce consistent comma style
    "computed-property-spacing": 1,             // enforce consistent spacing inside computed property brackets
    "eol-last": 1,                              // require or disallow newline at the end of files
    "func-call-spacing": 1,                     // require or disallow spacing between function identifiers and their invocations
    "func-style": 0,                            // enforce the consistent use of either function declarations or expressions
    "indent": [1,                               // enforce consistent indentation
      2, {"SwitchCase": 1}
    ],
    "jsx-quotes": [1,                           // enforce the consistent use of either double or single quotes in JSX attributes
      "prefer-single"
    ],
    "key-spacing": 1,                           // enforce consistent spacing between keys and values in object literal properties
    "keyword-spacing": 1,                       // enforce consistent spacing before and after keywords
    "linebreak-style": 1,                       // enforce consistent linebreak style
    "new-cap": 1,                               // require constructor names to begin with a capital letter
    "new-parens": 1,                            // require parentheses when invoking a constructor with no arguments
    "no-lonely-if": 1,                          // disallow if statements as the only statement in else blocks
    "no-mixed-operators": 0,                    // disallow mixed binary operators
    "no-mixed-spaces-and-tabs": 1,              // disallow mixed spaces and tabs for indentation
    "no-multiple-empty-lines": [1, {            // disallow multiple empty lines
      "max": 3,
      "maxEOF": 1
    }],
    "no-trailing-spaces": 1,                    // disallow trailing whitespace at the end of lines
    "no-unneeded-ternary": 1,                   // disallow ternary operators when simpler alternatives exist
    "no-whitespace-before-property": 1,         // disallow whitespace before properties
    "object-curly-newline": 1,                  // enforce consistent line breaks inside braces
    "object-curly-spacing": 1,                  // enforce consistent spacing inside braces
    "padded-blocks": [1,                        // require or disallow padding within blocks
      "never"
    ],
    "quotes": [1,                               // enforce the consistent use of either backticks, double, or single quotes
      "single"
    ],
    "require-jsdoc": 0,                         // require JSDoc comments
    "semi": 1,                                  // require or disallow semicolons instead of ASI
    "space-before-blocks": 1,                   // enforce consistent spacing before blocks
    "space-before-function-paren": [1,          // enforce consistent spacing before function definition opening parenthesis
      "never"
    ],
    "space-in-parens": 1,                       // enforce consistent spacing inside parentheses
    "space-infix-ops": 0,                       // require spacing around infix operators
    "space-unary-ops": 1,                       // enforce consistent spacing before or after unary operators
    "spaced-comment": 1,                        // enforce consistent spacing after the // or /* in a comment

    ////////// ECMAScript 6 //////////

    "arrow-body-style": 1,                      // require braces around arrow function bodies
    "arrow-parens": 1,                          // require parentheses around arrow function arguments
    "arrow-spacing": 1,                         // enforce consistent spacing before and after the arrow in arrow functions
    "constructor-super": 1,                     // require super() calls in constructors
    "no-const-assign": 1,                       // disallow reassigning const variables
    "no-dupe-class-members": 1,                 // disallow duplicate class members
    "no-duplicate-imports": 1,                  // disallow duplicate module imports
    "no-var": 1,                                // require let or const instead of var
    "rest-spread-spacing": 1,                   // enforce spacing between rest and spread operators and their expressions
    "template-curly-spacing": 1,                // require or disallow spacing around embedded expressions of template strings

    ////////// React //////////

    "react/jsx-uses-react": 1,                  // prevent React to be incorrectly marked as unused
    "react/jsx-uses-vars": 1,                   // prevent variables used in JSX to be incorrectly marked as unused
    "react/no-access-state-in-setstate": 1,     // prevent using this.state within a this.setState
    "react/no-direct-mutation-state": 1,        // prevent direct mutation of this.state
    "react/no-typos": 1,                        // prevents common typos
    "react/no-unused-prop-types": 1,            // prevent definitions of unused prop types
    "react/no-unused-state": 1,                 // prevent definitions of unused state
    "react/prop-types": 1,                      // prevent missing props validation in a React component definition
    "react/jsx-closing-bracket-location": 1,    // validate closing bracket location in JSX
    "react/jsx-curly-spacing": 1,               // enforce or disallow spaces inside of curly braces in JSX attributes and expressions
    "react/jsx-equals-spacing": 1,              // enforce or disallow spaces around equal signs in JSX attributes
    "react/jsx-first-prop-new-line": [1,        // configure the position of the first property
      "multiline"
    ],
    "react/jsx-no-duplicate-props": 1,          // prevent duplicate properties in JSX
    "react/jsx-pascal-case": 1,                 // enforce PascalCase for user-defined JSX components
    "react/jsx-props-no-multi-spaces": 1,       // disallow multiple spaces between inline JSX props
    "react/jsx-tag-spacing": [1, {              // validate whitespace in and around the JSX opening and closing brackets
      "beforeSelfClosing": "never",
      "beforeClosing": "never"
    }],
    "react/jsx-wrap-multilines": [1, {          // prevent missing parentheses around multiline JSX
      "declaration": "parens-new-line",
      "assignment": "parens-new-line",
      "return": "parens-new-line",
      "arrow": "parens-new-line",
      "condition": "parens-new-line",
      "logical": "parens-new-line",
      "prop": "parens-new-line"
    }]
  }
}
